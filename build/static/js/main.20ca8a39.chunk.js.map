{"version":3,"sources":["utils/ExcelHelper.ts","utils/Diff.ts","components/Import.tsx","components/Left.tsx","components/Right.tsx","components/DiffBtn.tsx","components/Cell.ts","utils/RenderDiffTable.tsx","components/DiffResult.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ExcelHelper","getSheet","wb","sheetname","callback","Promise","resolve","reject","wsItem","Sheets","data","items","XLSX","utils","sheet_to_json","header","convertFileToExcel","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","read","type","wsnameItems","SheetNames","sheets","workbook","readAsArrayBuffer","SheetJSFT","map","x","join","BlankData","row","col","Array","fill","daff","require","ImportHooks","props","Group","compact","style","marginRight","marginTop","name","width","accept","aria-label","onChange","onFileSelectChange","value","onSheetSelectChange","sheetlist","defaultProps","LeftHooks","className","padding","marginLeft","Import","ref","hotTableComponentLeft","sheetdata","settings","colHeaders","rowHeaders","height","minRows","minCols","colWidth","licenseKey","id","stretchH","RightHooks","hotTableComponentRight","DiffButtonHooks","textAlign","React","createRef","onClick","onDiffBtnClick","btntext","Cell","instance","this","y","v","getDataAtCell","undefined","renderDiff","td","prop","cellProperties","tt","view","coopy","SimpleView","cell","DiffRender","renderCell","category","value2","pretty_value","innerHTML","DiffResultHooks","fontSize","hotTableComponentDiffResult","minSpareCols","minSpareRows","contextMenu","readOnly","renderAllRows","renderer","App","excelHelper","useState","leftsheetname","setLeftSheetname","leftsheetlist","setLeftSheetlist","JSON","parse","stringify","leftsheetdata","setLeftSheetData","leftWorkbook","setLeftWorkbook","rightsheetname","setRightSheetname","rightsheetlist","setRightSheetlist","rightsheetdata","setRightSheetData","rightWorkbook","setRightWorkbook","diffBtnText","fileHandler","event","field","persist","files","fileObj","err","resp","console","log","sheetnames","i","length","push","Option","key","onSheetFieldChange","selectedSheetName","onDiffClick","preventDefault","left","right","current","hotInstance","tableLeft","TableView","tableRight","trim","align","compareTables","output","flags","CompareFlags","show_unchanged","always_show_header","always_show_order","never_show_order","unchanged_context","TableDiff","hilite","loadData","diff","span","Left","Right","DiffResult","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20ca8a39.chunk.js","sourcesContent":["import XLSX, { WorkBook } from \"xlsx\";\n\nexport interface ExcelDomain {\n  items: [] | undefined;\n  sheets: string[];\n  workbook: XLSX.WorkBook;\n}\n\nexport interface SheetDomain {\n  items: [] | undefined;\n}\n\nexport class ExcelHelper {\n  public static SheetJSFT = () => {\n    var jsft = [\"xlsx\"];\n    return jsft\n      .map(function (x) {\n        return \".\" + x;\n      })\n      .join(\",\");\n  };\n\n  public static BlankData = (row: number, col: number) => {\n    var data: string[][] = new Array(row)\n      .fill(\"\")\n      .map(() => new Array(col).fill(\"\"));\n\n    return data;\n  };\n\n  public getSheet = (wb: WorkBook, sheetname: string, callback: any) => {\n    return new Promise(function (resolve, reject) {\n      var wsItem = wb.Sheets[sheetname];\n\n      /* Convert array of arrays */\n      var items = XLSX.utils.sheet_to_json(wsItem, { header: 1 });\n\n      var data = {\n        items: items as [] | undefined,\n      } as SheetDomain;\n\n      resolve(data);\n      return callback(null, data);\n    });\n  };\n\n  public convertFileToExcel = (file: Blob, callback: any) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n      reader.onload = function (e) {\n        /* Parse data */\n        var bstr = e?.target?.result;\n        var wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n\n        /* Get first worksheet */\n        var wsnameItems = wb.SheetNames[0];\n        var wsItem = wb.Sheets[wsnameItems];\n\n        /* Convert array of arrays */\n        var items = XLSX.utils.sheet_to_json(wsItem, { header: 1 });\n\n        var data = {\n          items: items,\n          // locations: locations,\n          sheets: wb.SheetNames,\n          workbook: wb,\n        } as ExcelDomain;\n\n        resolve(data);\n        return callback(null, data);\n      };\n      if (file && rABS) reader.readAsBinaryString(file);\n      else reader.readAsArrayBuffer(file);\n    });\n  };\n}\n","const daff = require(\"daff\");\n\nexport const diff = (left: [][], right: [][], ref: React.RefObject<any>) => {\n  var instance = ref.current.hotInstance;\n  var result = [];\n  let tableLeft = new daff.TableView(left);\n  let tableRight = new daff.TableView(right);\n\n  tableLeft.trim();\n  tableRight.trim();\n\n  var ct = daff.compareTables(tableLeft, tableRight);\n\n  let align = ct.align();\n  let output = new daff.TableView([]);\n  let flags = new daff.CompareFlags();\n  flags.show_unchanged = false;\n  flags.always_show_header = true;\n  flags.always_show_order = true;\n  flags.never_show_order = false;\n  flags.unchanged_context = true;\n\n  var td = new daff.TableDiff(align, flags);\n  td.hilite(output);\n\n  if (output.height !== 0) {\n    result = output.data;\n    instance.loadData(result);\n  }\n};\n","import React from \"react\";\nimport { ExcelHelper } from \"../utils/ExcelHelper\";\nimport { Input, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\n\ninterface Import {\n  sheetname: string;\n  sheetlist: any;\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst ImportHooks = (props: Import) => {\n  return (\n    <Input.Group compact style={{ marginRight: 10, marginTop: -15 }}>\n      <input\n        name={\"file-upload\"}\n        style={{ width: \"50%\" }}\n        type=\"file\"\n        accept={ExcelHelper.SheetJSFT()}\n        aria-label=\"Select original file\"\n        onChange={(e) => props.onFileSelectChange(e)}\n      ></input>\n      <Select\n        style={{ width: \"40%\" }}\n        value={props.sheetname}\n        onChange={(e) => props.onSheetSelectChange(e)}\n      >\n        {props.sheetlist}\n      </Select>\n    </Input.Group>\n  );\n};\n\nImportHooks.defaultProps = {\n  sheetname: \"Sheet1\",\n  sheetlist: null,\n};\n\nexport default ImportHooks;\n","import React from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable } from \"@handsontable/react\";\nimport ImportHooks from \"../components/Import\";\n\ninterface Left {\n  sheetname: string;\n  sheetlist: any;\n\n  sheetdata: any[][] | Handsontable.RowObject[];\n  hotTableComponentLeft: React.RefObject<any>;\n\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst LeftHooks = (props: Left) => {\n  const hotLeftSettings = {\n    colHeaders: true,\n    rowHeaders: true,\n    height: 305,\n    minRows: 5,\n    minCols: 5,\n    colWidth: 100,\n    licenseKey: \"non-commercial-and-evaluation\",\n    id: \"table-left\",\n  };\n  return (\n    <>\n      <div className=\"left\" style={{ padding: 10 }}>\n        <h1 style={{ marginLeft: 3 }}>{\"<元・original>\"}</h1>\n        <ImportHooks\n          sheetname={props.sheetname}\n          sheetlist={props.sheetlist}\n          onFileSelectChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            props.onFileSelectChange(e)\n          }\n          onSheetSelectChange={(e: string) => props.onSheetSelectChange(e)}\n        />\n        <HotTable\n          ref={props.hotTableComponentLeft}\n          data={props.sheetdata}\n          style={{ width: \"100%\" }}\n          settings={hotLeftSettings}\n          stretchH={\"all\"}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LeftHooks;\n","import React from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable } from \"@handsontable/react\";\nimport ImportHooks from \"../components/Import\";\n\ninterface Right {\n  sheetname: string;\n  sheetlist: any;\n\n  sheetdata: any[][] | Handsontable.RowObject[];\n  hotTableComponentRight: React.RefObject<any>;\n\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst RightHooks = (props: Right) => {\n  const hotRightSettings = {\n    colHeaders: true,\n    rowHeaders: true,\n    height: 305,\n    minRows: 5,\n    minCols: 5,\n    colWidth: 100,\n    licenseKey: \"non-commercial-and-evaluation\",\n    id: \"table-right\",\n  };\n  return (\n    <>\n      <div className=\"right\" style={{ padding: 10 }}>\n        <h1 style={{ marginLeft: 3 }}>{\"<先・modified>\"}</h1>\n        <ImportHooks\n          sheetname={props.sheetname}\n          sheetlist={props.sheetlist}\n          onFileSelectChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            props.onFileSelectChange(e)\n          }\n          onSheetSelectChange={(e: string) => props.onSheetSelectChange(e)}\n        />\n        <HotTable\n          ref={props.hotTableComponentRight}\n          data={props.sheetdata}\n          style={{ width: \"100%\" }}\n          settings={hotRightSettings}\n          stretchH={\"all\"}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default RightHooks;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"antd\";\n\ninterface DiffBtn {\n  btntext: string;\n  onDiffBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>): any;\n}\n\nconst DiffButtonHooks = (props: DiffBtn) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Button\n        ref={React.createRef()}\n        id=\"btn-diff\"\n        type=\"primary\"\n        style={{ marginTop: 150 }}\n        onClick={(e) => props.onDiffBtnClick(e)}\n      >\n        {props.btntext}\n      </Button>\n    </div>\n  );\n};\n\nexport default DiffButtonHooks;\n","class Cell {\n  value: string;\n  instance: any;\n\n  constructor(value: string, instance: any) {\n    this.value = value;\n    this.instance = instance;\n  }\n\n  getCell(x: number, y: number) {\n    let v = this.instance.getDataAtCell(y, x);\n    if (v === null) return v;\n    else if (v === undefined) return \"\";\n    return \"\" + v;\n  }\n\n  getValue() {\n    return this.value;\n  }\n}\n\nexport default Cell;\n","import Handsontable from \"handsontable\";\nimport Cell from \"../components/Cell\";\nconst daff = require(\"daff\");\n\nexport function renderDiff(\n  instance: any,\n  td: HTMLTableCellElement,\n  row: number,\n  col: number,\n  prop: string | number,\n  value: Handsontable.CellValue,\n  cellProperties: Handsontable.CellProperties\n) {\n  var tt = new Cell(value, instance);\n  var view = new daff.coopy.SimpleView();\n  var cell = daff.coopy.DiffRender.renderCell(tt, view, col, row);\n  var className = cell.category;\n  var value2 = cell.pretty_value;\n  if (className !== \"\") {\n    td.className = className;\n  }\n\n  td.innerHTML = value2;\n  return value2;\n}\n","import React from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport { renderDiff } from \"../utils/RenderDiffTable\";\n\ninterface DiffResult {\n  hotTableComponentDiffResult: React.RefObject<any>;\n}\n\nconst DiffResultHooks = (props: DiffResult) => {\n  const hotDiffResultSettings = {\n    minRows: 10,\n    minCols: 10,\n    minSpareCols: 0,\n    minSpareRows: 0,\n    colHeaders: false,\n    contextMenu: false,\n    rowHeaders: false,\n    readOnly: true,\n    renderAllRows: true,\n    licenseKey: \"non-commercial-and-evaluation\",\n  };\n\n  return (\n    <>\n      <span style={{ fontSize: 24 }}>{\"比較結果\"}</span>\n      <HotTable\n        ref={props.hotTableComponentDiffResult}\n        data={[[\"\"]]}\n        style={{ width: \"100%\", padding: 15 }}\n        id={\"tableresult\"}\n        settings={hotDiffResultSettings}\n        renderer={renderDiff}\n        className=\"diffhandsontable\"\n        stretchH={\"all\"}\n      />\n    </>\n  );\n};\n\nexport default DiffResultHooks;\n","import React, { useState } from \"react\";\nimport { Row, Col, Select } from \"antd\";\nimport \"handsontable/dist/handsontable.full.css\";\nimport \"./App.scss\";\nimport { ExcelHelper, ExcelDomain, SheetDomain } from \"./utils/ExcelHelper\";\nimport { diff } from \"./utils/Diff\";\nimport LeftHooks from \"./components/Left\";\nimport RightHooks from \"./components/Right\";\nimport DiffButtonHooks from \"./components/DiffBtn\";\nimport DiffResultHooks from \"./components/DiffResult\";\nimport { WorkBook } from \"xlsx/types\";\n\nfunction App() {\n  var excelHelper = new ExcelHelper();\n  const [leftsheetname, setLeftSheetname] = useState(\"Sheet1\");\n  const [leftsheetlist, setLeftSheetlist] = useState<any[] | null>(null);\n  const [hotTableComponentLeft] = useState(React.createRef());\n  const [leftsheetdata, setLeftSheetData] = useState(\n    JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 10)))\n  );\n  const [leftWorkbook, setLeftWorkbook] = useState<WorkBook>();\n  const [rightsheetname, setRightSheetname] = useState(\"Sheet1\");\n  const [rightsheetlist, setRightSheetlist] = useState<any[] | null>(null);\n  const [hotTableComponentRight] = useState(React.createRef());\n  const [rightsheetdata, setRightSheetData] = useState(\n    JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 10)))\n  );\n  const [rightWorkbook, setRightWorkbook] = useState<WorkBook>();\n  const [diffBtnText] = useState(\">> Diff <<\");\n  const [hotTableComponentDiffResult] = useState(React.createRef());\n\n  const fileHandler = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    event.persist();\n    if (event.target.files) {\n      let fileObj = event.target.files[0];\n\n      if (fileObj) {\n        excelHelper.convertFileToExcel(\n          fileObj,\n          (err: any, resp: ExcelDomain) => {\n            if (err) {\n              console.log(err);\n            } else {\n              let sheetnames = [];\n              for (var i = 0; i < resp.sheets.length; i++) {\n                sheetnames.push(\n                  <Select.Option key={resp.sheets[i]} value={resp.sheets[i]}>\n                    {resp.sheets[i]}\n                  </Select.Option>\n                );\n              }\n              if (field === \"left\") {\n                setLeftSheetname(resp.sheets[0]);\n                setLeftSheetlist(sheetnames);\n                setLeftSheetData(resp.items);\n                setLeftWorkbook(resp.workbook);\n              } else {\n                setRightSheetname(resp.sheets[0]);\n                setRightSheetlist(sheetnames);\n                setRightSheetData(resp.items);\n                setRightWorkbook(resp.workbook);\n              }\n            }\n          }\n        );\n      }\n    }\n  };\n\n  const onSheetFieldChange = (selectedSheetName: string, field: string) => {\n    var wb = null;\n    if (field === \"left\") wb = leftWorkbook;\n    else wb = rightWorkbook;\n\n    if (wb !== undefined && wb !== null && selectedSheetName !== undefined) {\n      excelHelper.getSheet(\n        wb,\n        selectedSheetName,\n        (err: any, resp: SheetDomain) => {\n          if (err) {\n            console.log(err);\n          } else {\n            if (field === \"left\") {\n              setLeftSheetname(selectedSheetName);\n              setLeftSheetData(resp.items);\n            } else {\n              setRightSheetname(selectedSheetName);\n              setRightSheetData(resp.items);\n            }\n          }\n        }\n      );\n    }\n  };\n\n  const onDiffClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    diff(leftsheetdata, rightsheetdata, hotTableComponentDiffResult);\n  };\n\n  return (\n    <div className=\"App\">\n      <Row>\n        <Col span={11}>\n          <LeftHooks\n            sheetname={leftsheetname}\n            sheetlist={leftsheetlist}\n            onFileSelectChange={(e) => fileHandler(e, \"left\")}\n            onSheetSelectChange={(e) => onSheetFieldChange(e, \"left\")}\n            hotTableComponentLeft={hotTableComponentLeft}\n            sheetdata={leftsheetdata}\n          />\n        </Col>\n        <Col span={2}>\n          <DiffButtonHooks\n            btntext={diffBtnText}\n            onDiffBtnClick={(e) => {\n              onDiffClick(e);\n            }}\n          />\n        </Col>\n        <Col span={11}>\n          <RightHooks\n            sheetname={rightsheetname}\n            sheetlist={rightsheetlist}\n            onFileSelectChange={(e) => fileHandler(e, \"right\")}\n            onSheetSelectChange={(e) => onSheetFieldChange(e, \"right\")}\n            hotTableComponentRight={hotTableComponentRight}\n            sheetdata={rightsheetdata}\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: \"center\" }}>\n          <DiffResultHooks\n            hotTableComponentDiffResult={hotTableComponentDiffResult}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}